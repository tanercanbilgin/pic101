CCS PCM C Compiler, Version 5.112, 5967               05-Ara-23 01:22

               Filename:   C:\Users\Administrator\Desktop\notes\3_Sinif\1_Donem\Mikroislemciler\lab\lab 7\ccs\timer_56.lst

               ROM used:   123 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   037
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877.h>
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD
.................... #use delay(clock = 4000000)
.................... #use fast_io(b)
.................... //****** Dis Kesme Fonksiyonu *****************
.................... #int_timer0
.................... void timerO_kesme()
.................... {
....................     set_Timer0(56);
002F:  MOVLW  38
0030:  MOVWF  01
....................     output_toggle(pin_b0);
0031:  MOVLW  01
0032:  XORWF  06,F
0033:  BCF    0B.2
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   01B
.................... }
.................... //********* ANA PROGRAM FONKSIYONU********
.................... void main()
0037:  MOVF   03,W
0038:  ANDLW  1F
0039:  MOVWF  03
003A:  MOVLW  FF
003B:  MOVWF  27
003C:  BSF    03.5
003D:  BSF    1F.0
003E:  BSF    1F.1
003F:  BSF    1F.2
0040:  BCF    1F.3
0041:  BCF    03.7
.................... {
....................     setup_psp(PSP_DISABLED);          // PSP devre disi
0042:  BCF    09.4
....................     setup_spi(SPI_SS_DISABLED);       // SPI devre disi
0043:  BCF    03.5
0044:  BCF    14.5
0045:  BCF    27.5
0046:  MOVF   27,W
0047:  BSF    03.5
0048:  MOVWF  07
0049:  BCF    03.5
004A:  BSF    27.4
004B:  MOVF   27,W
004C:  BSF    03.5
004D:  MOVWF  07
004E:  BCF    03.5
004F:  BCF    27.3
0050:  MOVF   27,W
0051:  BSF    03.5
0052:  MOVWF  07
0053:  MOVLW  01
0054:  BCF    03.5
0055:  MOVWF  14
0056:  MOVLW  00
0057:  BSF    03.5
0058:  MOVWF  14
....................     setup_timer_1(T1_DISABLED);       // T1 devre disi
0059:  BCF    03.5
005A:  CLRF   10
....................     setup_timer_2(T2_DISABLED, 0, 1); // T2 devre disi
005B:  MOVWF  78
005C:  MOVWF  12
005D:  MOVLW  00
005E:  BSF    03.5
005F:  MOVWF  12
....................     setup_adc_ports(NO_ANALOGS);      // analog giris yok
0060:  BSF    1F.0
0061:  BSF    1F.1
0062:  BSF    1F.2
0063:  BCF    1F.3
....................     setup_adc(ADC_OFF);               // ADC kapali
0064:  BCF    03.5
0065:  BCF    1F.0
....................     setup_CCP1(CCP_OFF);              // CCP1 devre disi
0066:  MOVLW  F0
0067:  ANDWF  17,F
....................     setup_CCP2(CCP_OFF);              // CCP2 devredisi
0068:  ANDWF  1D,F
.................... 
....................     set_tris_b(0x0);
0069:  MOVLW  00
006A:  BSF    03.5
006B:  MOVWF  06
....................     output_b(0x00);
006C:  BCF    03.5
006D:  CLRF   06
.................... 
....................     setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256);
006E:  BSF    03.5
006F:  MOVF   01,W
0070:  ANDLW  C0
0071:  IORLW  07
0072:  MOVWF  01
....................     set_Timer0(56);
0073:  MOVLW  38
0074:  BCF    03.5
0075:  MOVWF  01
.................... 
....................     enable_interrupts(INT_timer0);
0076:  BSF    0B.5
....................     enable_interrupts(GLOBAL);
0077:  MOVLW  C0
0078:  IORWF  0B,F
....................     while (1)
....................     {
0079:  GOTO   079
....................     }
.................... }
007A:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
