CCS PCM C Compiler, Version 5.112, 5967               21-Kas-23 15:02

               Filename:   C:\Users\Administrator\Desktop\notes\3_Sinif\1_Donem\Mikroislemciler\lab\lab 6\ccs\diy\diy.lst

               ROM used:   140 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   03D
.................... #include <16f877.h>
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
002F:  BCF    0A.0
0030:  BCF    0A.1
0031:  BCF    0A.2
0032:  ADDWF  02,F
0033:  RETLW  7E
0034:  RETLW  0C
0035:  RETLW  B6
0036:  RETLW  9E
0037:  RETLW  CC
0038:  RETLW  DA
0039:  RETLW  F8
003A:  RETLW  0E
003B:  RETLW  FE
003C:  RETLW  DE
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD
.................... #use delay(clock = 4000000)
.................... #use fast_io(b)
.................... 
.................... // *** Sayilar ve Kesme Fonksiyonu ***
.................... int i = 1;
.................... const int digit[10] = {
.................... 	0x7E, // 0
.................... 	0xC, // 1
.................... 	0xB6, // 2
.................... 	0x9E, // 3
.................... 	0xCC, // 4
.................... 	0xDA, // 5
.................... 	0xF8, // 6
.................... 	0xE, // 7
.................... 	0xFE, // 8
.................... 	0xDE  // 9
.................... };
.................... 
.................... #int_ext		   // Dis (External) RB0/INT kesmesi
.................... void ext_kesmesi() // Sayilar ve Kesme Fonksiyonu
.................... {
.................... 	output_b(digit[i]); // RB0 pin cikisi lojik-1
003D:  MOVF   27,W
003E:  CALL   02F
003F:  MOVWF  29
0040:  MOVWF  06
.................... 	i++;
0041:  INCF   27,F
.................... 	if (i == 10)
0042:  MOVF   27,W
0043:  SUBLW  0A
0044:  BTFSC  03.2
.................... 		i = 0;
0045:  CLRF   27
0046:  BCF    0B.1
0047:  BCF    0A.3
0048:  BCF    0A.4
0049:  GOTO   01B
.................... }
.................... 
.................... // ********* ANA PROGRAM FONKSIYONU********
.................... void main()
004A:  MOVF   03,W
004B:  ANDLW  1F
004C:  MOVWF  03
004D:  MOVLW  01
004E:  MOVWF  27
004F:  MOVLW  FF
0050:  MOVWF  28
0051:  BSF    03.5
0052:  BSF    1F.0
0053:  BSF    1F.1
0054:  BSF    1F.2
0055:  BCF    1F.3
0056:  BCF    03.7
.................... {
.................... 	setup_psp(PSP_DISABLED);		  // PSP devre disi
0057:  BCF    09.4
.................... 	setup_spi(SPI_SS_DISABLED);		  // SPI devre disi
0058:  BCF    03.5
0059:  BCF    14.5
005A:  BCF    28.5
005B:  MOVF   28,W
005C:  BSF    03.5
005D:  MOVWF  07
005E:  BCF    03.5
005F:  BSF    28.4
0060:  MOVF   28,W
0061:  BSF    03.5
0062:  MOVWF  07
0063:  BCF    03.5
0064:  BCF    28.3
0065:  MOVF   28,W
0066:  BSF    03.5
0067:  MOVWF  07
0068:  MOVLW  01
0069:  BCF    03.5
006A:  MOVWF  14
006B:  MOVLW  00
006C:  BSF    03.5
006D:  MOVWF  14
.................... 	setup_timer_1(T1_DISABLED);		  // T1 devre disi
006E:  BCF    03.5
006F:  CLRF   10
.................... 	setup_timer_2(T2_DISABLED, 0, 1); // T2 devre disi
0070:  MOVWF  78
0071:  MOVWF  12
0072:  MOVLW  00
0073:  BSF    03.5
0074:  MOVWF  12
.................... 	setup_adc_ports(NO_ANALOGS);	  // analog giris yok
0075:  BSF    1F.0
0076:  BSF    1F.1
0077:  BSF    1F.2
0078:  BCF    1F.3
.................... 	setup_adc(ADC_OFF);				  // ADC kapali
0079:  BCF    03.5
007A:  BCF    1F.0
.................... 	setup_CCP1(CCP_OFF);			  // CCP1 devre disi
007B:  MOVLW  F0
007C:  ANDWF  17,F
.................... 	setup_CCP2(CCP_OFF);			  // CCP2 devredisi
007D:  ANDWF  1D,F
.................... 
.................... 	set_tris_b(0x01); // RB0 portu giris diger bütün pinler cikis
007E:  MOVLW  01
007F:  BSF    03.5
0080:  MOVWF  06
.................... 	output_b(0x7E);
0081:  MOVLW  7E
0082:  BCF    03.5
0083:  MOVWF  06
.................... 
.................... 	ext_int_edge(L_TO_H); // INT_EXT kesmesi yükselen kenarda aktif
0084:  BSF    03.5
0085:  BSF    01.6
.................... 
.................... 	enable_interrupts(INT_EXT); // INT_EXT (RB0) kesmesi aktif
0086:  BCF    03.5
0087:  BSF    0B.4
.................... 	enable_interrupts(GLOBAL);	// Aktif edilen sekmelere izin ver
0088:  MOVLW  C0
0089:  IORWF  0B,F
.................... 
.................... 	while (1)
.................... 	{
008A:  GOTO   08A
.................... 	}
.................... }
008B:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
