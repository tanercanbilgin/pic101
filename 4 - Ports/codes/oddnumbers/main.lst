CCS PCM C Compiler, Version 5.112, 5967               07-Kas-23 16:03

               Filename:   C:\Users\Administrator\Desktop\notes\3_Sinif\1_Donem\Mikroislemciler\lab\lab 4\compiler\1357\main.lst

               ROM used:   100 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877.h>
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... #fuses XT,NOWDT, NOPROTECT, NOBROWNOUT,,NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD
.................... #use delay (clock=4000000)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #use fast_io(b)
.................... void main()
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  FF
001D:  MOVWF  20
001E:  BSF    03.5
001F:  BSF    1F.0
0020:  BSF    1F.1
0021:  BSF    1F.2
0022:  BCF    1F.3
0023:  BCF    03.7
.................... {
....................  setup_psp(PSP_DISABLED) ; //PSP devre disi
0024:  BCF    09.4
....................  setup_spi(SPI_SS_DISABLED); //SPI devre disi
0025:  BCF    03.5
0026:  BCF    14.5
0027:  BCF    20.5
0028:  MOVF   20,W
0029:  BSF    03.5
002A:  MOVWF  07
002B:  BCF    03.5
002C:  BSF    20.4
002D:  MOVF   20,W
002E:  BSF    03.5
002F:  MOVWF  07
0030:  BCF    03.5
0031:  BCF    20.3
0032:  MOVF   20,W
0033:  BSF    03.5
0034:  MOVWF  07
0035:  MOVLW  01
0036:  BCF    03.5
0037:  MOVWF  14
0038:  MOVLW  00
0039:  BSF    03.5
003A:  MOVWF  14
....................  setup_timer_1(T1_DISABLED);// T1 devre disi
003B:  BCF    03.5
003C:  CLRF   10
....................  setup_timer_2(T2_DISABLED,0,1);// T2 devre disi
003D:  MOVWF  78
003E:  MOVWF  12
003F:  MOVLW  00
0040:  BSF    03.5
0041:  MOVWF  12
....................  setup_adc_ports(NO_ANALOGS); //analog giris yok
0042:  BSF    1F.0
0043:  BSF    1F.1
0044:  BSF    1F.2
0045:  BCF    1F.3
....................  setup_adc(ADC_OFF) ; //ADC kapali
0046:  BCF    03.5
0047:  BCF    1F.0
....................  setup_CCP1(CCP_OFF); //CCP1 devre disi
0048:  MOVLW  F0
0049:  ANDWF  17,F
....................  setup_CCP2(CCP_OFF); //CCP2 devredisi
004A:  ANDWF  1D,F
.................... 
....................  set_tris_b(0x00); //B portu bütün pinler cikis
004B:  MOVLW  00
004C:  BSF    03.5
004D:  MOVWF  06
....................  output_b (0x00); //bütün pinler 0
004E:  BCF    03.5
004F:  CLRF   06
.................... 
....................  while(1)
....................  {
....................  // 0x01 0x04 0x10 0x40 = C
....................  // 0x02 0x08 0x20 0x80 = 
....................  output_b(0X55); //B Portu bütün pin çikisi lojik-1
0050:  MOVLW  55
0051:  MOVWF  06
....................  delay_ms(1000); //1000 ms gecikme
0052:  MOVLW  04
0053:  MOVWF  21
0054:  MOVLW  FA
0055:  MOVWF  22
0056:  CALL   004
0057:  DECFSZ 21,F
0058:  GOTO   054
....................  output_b(0xAA); // B Portu bütün pin çikisi lojik-0
0059:  MOVLW  AA
005A:  MOVWF  06
....................  delay_ms(1000); //1000 ms gecikme
005B:  MOVLW  04
005C:  MOVWF  21
005D:  MOVLW  FA
005E:  MOVWF  22
005F:  CALL   004
0060:  DECFSZ 21,F
0061:  GOTO   05D
0062:  GOTO   050
....................  }
.................... }
0063:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
