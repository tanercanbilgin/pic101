CCS PCM C Compiler, Version 5.112, 5967               10-Kas-23 01:25

               Filename:   C:\Users\Administrator\Desktop\notes\3_Sinif\1_Donem\Mikroislemciler\lab\lab 4\compiler\main.lst

               ROM used:   104 words (1%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01B
0003:  NOP
.................... #include <16f877.h>
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... #fuses XT,NOWDT, NOPROTECT, NOBROWNOUT,,NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD
.................... #use delay (clock=4000000)
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  BCF    0A.4
001A:  GOTO   05D (RETURN)
.................... #use fast_io(b)
.................... void main()
001B:  MOVF   03,W
001C:  ANDLW  1F
001D:  MOVWF  03
001E:  MOVLW  FF
001F:  MOVWF  20
0020:  BSF    03.5
0021:  BSF    1F.0
0022:  BSF    1F.1
0023:  BSF    1F.2
0024:  BCF    1F.3
0025:  BCF    03.7
0026:  MOVLW  01
0027:  BCF    03.5
0028:  MOVWF  21
.................... {
....................  int led = 0x01;
....................  setup_psp(PSP_DISABLED) ; //PSP devre disi
0029:  BSF    03.5
002A:  BCF    09.4
....................  setup_spi(SPI_SS_DISABLED); //SPI devre disi
002B:  BCF    03.5
002C:  BCF    14.5
002D:  BCF    20.5
002E:  MOVF   20,W
002F:  BSF    03.5
0030:  MOVWF  07
0031:  BCF    03.5
0032:  BSF    20.4
0033:  MOVF   20,W
0034:  BSF    03.5
0035:  MOVWF  07
0036:  BCF    03.5
0037:  BCF    20.3
0038:  MOVF   20,W
0039:  BSF    03.5
003A:  MOVWF  07
003B:  MOVLW  01
003C:  BCF    03.5
003D:  MOVWF  14
003E:  MOVLW  00
003F:  BSF    03.5
0040:  MOVWF  14
....................  setup_timer_1(T1_DISABLED);// T1 devre disi
0041:  BCF    03.5
0042:  CLRF   10
....................  setup_timer_2(T2_DISABLED,0,1);// T2 devre disi
0043:  MOVWF  78
0044:  MOVWF  12
0045:  MOVLW  00
0046:  BSF    03.5
0047:  MOVWF  12
....................  setup_adc_ports(NO_ANALOGS); //analog giris yok
0048:  BSF    1F.0
0049:  BSF    1F.1
004A:  BSF    1F.2
004B:  BCF    1F.3
....................  setup_adc(ADC_OFF) ; //ADC kapali
004C:  BCF    03.5
004D:  BCF    1F.0
....................  setup_CCP1(CCP_OFF); //CCP1 devre disi
004E:  MOVLW  F0
004F:  ANDWF  17,F
....................  setup_CCP2(CCP_OFF); //CCP2 devredisi
0050:  ANDWF  1D,F
.................... 
....................  set_tris_b(0x00); //B portu bütün pinler cikis
0051:  MOVLW  00
0052:  BSF    03.5
0053:  MOVWF  06
....................  output_b (0x00); //baslangicta 1. led yanik
0054:  BCF    03.5
0055:  CLRF   06
.................... 
....................  while(1)
....................  {
....................  output_b(led); //RB0 pin çikisi lojik-1
0056:  MOVF   21,W
0057:  MOVWF  06
....................  delay_ms(1000); //500 ms gecikme
0058:  MOVLW  04
0059:  MOVWF  22
005A:  MOVLW  FA
005B:  MOVWF  23
005C:  GOTO   004
005D:  DECFSZ 22,F
005E:  GOTO   05A
....................  led = led << 1;
005F:  BCF    03.0
0060:  RLF    21,F
.................... 
....................  if (led == 0x00)
0061:  MOVF   21,F
0062:  BTFSS  03.2
0063:  GOTO   066
....................  led = 0x01;
0064:  MOVLW  01
0065:  MOVWF  21
0066:  GOTO   056
....................  }
.................... }
0067:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
